@using WebAnime.Models.Entities;
@using Microsoft.AspNet.Identity
@model IEnumerable<WebAnime.Models.ViewModel.Admin.EpisodeViewModel>

@{
    ViewBag.Title = "Quản lý tập phim";
    var anime = ViewBag.Anime as Animes;
    var servers = ViewBag.Servers as IEnumerable<Servers>;

    var currentServerId = (int)ViewBag.ServerId;
    var currentAnimeId = anime?.Id;
}
@Html.ActionLink("Thêm tập mới", "Create", new { animeId = anime.Id, serverId = currentServerId }, new { @class = "btn btn-primary my-2" })
@if (anime != null)
{

    using (Html.BeginForm("Index", "Episode", FormMethod.Get))
    {
        <div class="row my-3 d-flex justify-content-center">
            <label class="col-1 col-form-label fw-bold">Server</label>
            @Html.Hidden("animeId", anime.Id)
            <div class="col-4">
                @Html.DropDownList("serverId", new SelectList(servers, "Id", "Name", currentServerId), new { @class = "form-select" })
            </div>
            <div class="col-1">
                <button class="btn-primary btn w-100">
                    Lọc
                </button>

            </div>
        </div>

    }

    <h2>Quản lý tập phim @anime.Title</h2>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(m => m.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Url)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.SortOrder)
                </th>
                @*<th>
                        @Html.DisplayNameFor(m => m.ServerId)
                    </th>*@
                <th>
                    Chức năng
                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        <a target="_blank" href="@item.Url" class="text-decoration-none">@item.Url</a>
                    </td>
                    <td>
                        @item.SortOrder
                    </td>
                    <td>
                        <div class="btn-group">
                            @Html.ActionLink("Sửa", "Update", "Episode", new { area = "Admin", id = item.Id }, new { @class = "btn btn-primary" })
                            @Html.ActionLink("Xoá", "Delete", "Episode", new { area = "Admin", id = item.Id }, new { @class = "btn btn-danger" })

                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h2>Không thấy anime, vui lòng tải lại</h2>
}

<div>

    <!-- sample modal content -->
    <div class="modal fade"
         id="btn-add-multiple-episodes"
         tabindex="-1"
         aria-labelledby="bs-example-modal-lg"
         aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header d-flex align-items-center">
                    <h4 class="modal-title" id="myLargeModalLabel">
                        Danh sách tập mới
                    </h4>
                    <button type="button"
                            class="btn-close"
                            data-bs-dismiss="modal"
                            aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h3>Mỗi tập 1 dòng</h3>
                    <h3>Tập thêm vào phải theo quy tắc: Tên tập|Url|Thứ tự</h3>
                    <h4>Ví dụ: 01|http://abc.xyz|1</h4>
                    <textarea class="form-control" style="height: 300px;" id="newEpisodes"></textarea>
                    <span class=" text-danger mt-1" id="newEpisodesError"></span>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-light-danger text-primary text-start"
                            id="btnAddEpisodes"
                            data-server-id="@currentServerId"
                            data-anime-id="@currentAnimeId"
                            data-created-by="@User.Identity.GetUserId()"
                            data-request-url="@Url.Action("CreateMultiple","Episode")">
                        Thêm mới
                    </button>
                    <button type="button"
                            class="btn btn-light-danger text-danger  text-start"
                            data-bs-dismiss="modal">
                        Thoát
                    </button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
</div>
@section footerJs
{
    <script>
        $(`#btnCreateMultiEpisodes`).click(function () {
            //alert(requestUrl);
            //handleCreate(requestUrl);

        });
        $(`#btnAddEpisodes`).click(function () {
            const animeId = $(this).data('animeId');
            const serverId = $(this).data('serverId');
            const requestUrl = $(this).data('requestUrl');
            const createdBy = $(this).data('createdBy');

            const data = $(`#newEpisodes`).val();
            if (data.length === 0) {
                $(`#newEpisodesError`).text("Vui lòng nhập dữ liệu");
                return;
            }
            const listData = data.split(`\n`);

            const listEpisodes = [];

            listData.forEach(x => {

                var splitTemp = x.split('|');
                const title = splitTemp[0];
                const url = splitTemp[1];
                const sortOrder = splitTemp[2];
                const episode = {
                    title,
                    url,
                    sortOrder,
                    animeId,
                    serverId,
                    createdBy
                };

                listEpisodes.push(episode);
            });
            //console.log(JSON.stringify(listEpisodes));
            handleCreate(requestUrl, listEpisodes);
        });

        function handleCreate(requestUrl, data) {
            $.ajax({
                type: "POST",
                url: requestUrl,
                data: {
                    model: data
                },
                dataType: 'json',
                success: function (response) {
                    console.log(response);

                    if (response.success) {
                        alert(`Thêm thành công`);
                        location.reload();
                    } else {
                        alert(`Có lỗi xảy ra`);
                    }
                },
                error: function (error) {
                    alert('error; ' + eval(error));
                }
            });
        }
    </script>
}
